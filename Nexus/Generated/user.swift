/**
 * @name: user
 * @author: Erik E. Beerepoot
 * @brief: None provided.
 * @notes: Autogenerated! Edit at your own risk!
 */

 struct user {
 	var profile : Dictionary? = nil;
 	var is_owner : Bool? = nil;
 	var name : String? = nil;
 	var deleted : Bool? = nil;
 	var color : String? = nil;
 	var is_admin : Bool? = nil;
 	var is_ultra_restricted : Bool? = nil;
 	var has_files : Bool? = nil;
 	var is_restricted : Bool? = nil;
 	var id : String? = nil;
 	var is_primary_owner : Bool? = nil;
 	
 	func packObject(jsonData : NSData) {
 		jsonObject = JSON.parse(jsonData);

 		//get our variables out of the object
 	 	jsonObject[profile] = jsonObject?["profile"].Dictionary;
	 	jsonObject[is_owner] = jsonObject?["is_owner"].Bool;
	 	jsonObject[name] = jsonObject?["name"].String;
	 	jsonObject[deleted] = jsonObject?["deleted"].Bool;
	 	jsonObject[color] = jsonObject?["color"].String;
	 	jsonObject[is_admin] = jsonObject?["is_admin"].Bool;
	 	jsonObject[is_ultra_restricted] = jsonObject?["is_ultra_restricted"].Bool;
	 	jsonObject[has_files] = jsonObject?["has_files"].Bool;
	 	jsonObject[is_restricted] = jsonObject?["is_restricted"].Bool;
	 	jsonObject[id] = jsonObject?["id"].String;
	 	jsonObject[is_primary_owner] = jsonObject?["is_primary_owner"].Bool;
	 		
 	}

 	func unpackObject() -> (NSData) {
 		var jsonDict : Dictionary = Dictionary();
	 	jsonDict["profile""] = profile;
	 	jsonDict["is_owner""] = is_owner;
	 	jsonDict["name""] = name;
	 	jsonDict["deleted""] = deleted;
	 	jsonDict["color""] = color;
	 	jsonDict["is_admin""] = is_admin;
	 	jsonDict["is_ultra_restricted""] = is_ultra_restricted;
	 	jsonDict["has_files""] = has_files;
	 	jsonDict["is_restricted""] = is_restricted;
	 	jsonDict["id""] = id;
	 	jsonDict["is_primary_owner""] = is_primary_owner;
	 		
		return NSJSONSerialization.dataWithJSONObject(jsonDict,0,nil);
 	}
 }
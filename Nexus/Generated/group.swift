/**
 * @name: group
 * @author: Erik E. Beerepoot
 * @brief: None provided.
 * @notes: Autogenerated! Edit at your own risk!
 */

 struct group {
 	var name : String? = nil;
 	var creator : String? = nil;
 	var is_archived : Bool? = nil;
 	var created : int? = nil;
 	var is_group : String? = nil;
 	var topic : Dictionary? = nil;
 	var purpose : Dictionary? = nil;
 	var members : Array? = nil;
 	var id : String? = nil;
 	
 	func packObject(jsonData : NSData) {
 		jsonObject = JSON.parse(jsonData);

 		//get our variables out of the object
 	 	jsonObject[name] = jsonObject?["name"].String;
	 	jsonObject[creator] = jsonObject?["creator"].String;
	 	jsonObject[is_archived] = jsonObject?["is_archived"].Bool;
	 	jsonObject[created] = jsonObject?["created"].int;
	 	jsonObject[is_group] = jsonObject?["is_group"].String;
	 	jsonObject[topic] = jsonObject?["topic"].Dictionary;
	 	jsonObject[purpose] = jsonObject?["purpose"].Dictionary;
	 	jsonObject[members] = jsonObject?["members"].Array;
	 	jsonObject[id] = jsonObject?["id"].String;
	 		
 	}

 	func unpackObject() -> (NSData) {
 		var jsonDict : Dictionary = Dictionary();
	 	jsonDict["name""] = name;
	 	jsonDict["creator""] = creator;
	 	jsonDict["is_archived""] = is_archived;
	 	jsonDict["created""] = created;
	 	jsonDict["is_group""] = is_group;
	 	jsonDict["topic""] = topic;
	 	jsonDict["purpose""] = purpose;
	 	jsonDict["members""] = members;
	 	jsonDict["id""] = id;
	 		
		return NSJSONSerialization.dataWithJSONObject(jsonDict,0,nil);
 	}
 }